<div id="section-topbar" class>
	<div id="topbar-inner">
		<div class="container">
			<div class="row">
				<div class="dropdown">
					<ul id="nav" class="nav">
						<li class="menu-item"><a class="smoothScroll" href="/" title="홈으로"><i class="fa fa-home"></i></a></li>
						<li class="menu-item"><a class="smoothScroll" href="/map" title="지도보기"><i class="fa fa-map-o"></i></a></li>
						<li class="menu-item"><a class="smoothScroll" href="/new" title="신고하기"><i class="fa fa-map-marker"></i></a></li>
						<li class="menu-item"><a class="smoothScroll" href="#contact" title="Contact"><i class="icon-envelope"></i></a></li>
					</ul><!--/ uL#nav -->
				</div><!-- /.dropdown -->

				<div class="clear"></div>
			</div><!--/.row -->
		</div><!--/.container -->

		<div class="clear"></div>
	</div><!--/ #topbar-inner -->
</div><!--/ #section-topbar -->

<div id="map" class="map_container col-md-12 col-xs-12 col-sm-12"></div>

<script>
var map = new naver.maps.Map('map', mapOptions);
var mapOptions = {
    center: new naver.maps.LatLng(37.3595704, 127.105399), //지도의 초기 중심 좌표
    zoom: 13, //지도의 초기 줌 레벨
    minZoom: 1, //지도의 최소 줌 레벨
    scaleControl: true,
    logoControl: true,
    mapDataControl: true,
    zoomControl: true, //줌 컨트롤의 표시 여부
    zoomControlOptions: { //줌 컨트롤의 옵션
    position: naver.maps.Position.TOP_RIGHT
}};

//marker option
var menuLayer = $('<div style="position:absolute;z-index:10000;background-color:#fff;border:solid 1px #333;padding:10px;display:none;"></div>');

map.getPanes().floatPane.appendChild(menuLayer[0]);

var markerList = [];
var infowindowList =[];

<% @barbaries.each do |bar| %>
<% if bar.x||bar.y != nil %>

    var marker_bar = new naver.maps.Marker({
        position: new naver.maps.LatLng(<%= bar.x %>,<%= bar.y %>),
        map: map});
        
    var contentString = [
            '<div class="iw_inner">',
            '   <h3> <%= bar.title %></h3>',
            '   <p> <%= bar.message %> ',
            '   </p>',
            '</div>'
        ].join('');
    
    var infowindow_bar = new naver.maps.InfoWindow({
        content: contentString,
        maxWidth: 140,
        backgroundColor: "#eee",
        // borderColor: "#2db400",
        borderWidth: 5,
        // anchorSize: new naver.maps.Size(30, 30),
        // anchorSkew: true,
        // anchorColor: "#eee",
        // pixelOffset: new naver.maps.Point(20, -20)
    });    
        
    markerList.push(marker_bar);
    infowindowList.push(infowindow_bar);

    <% end %>
<% end %>


// 해당 마커의 인덱스를 seq라는 클로저 변수로 저장하는 이벤트 핸들러를 반환합니다.
function getClickHandler(seq) {
    return function(e) {
        var marker = markerList[seq],
            infoWindow = infowindowList[seq];

        if (infoWindow.getMap()) {
            infoWindow.close();
        } else {
            infoWindow.open(map, marker);
        }
    }
}

for (var i=0, ii=markerList.length; i<ii; i++) {
    naver.maps.Event.addListener(markerList[i], 'click', getClickHandler(i));
}



naver.maps.Event.addListener(map, 'rightclick', function(e) {
    var coordHtml = 'Coord: '+ e.coord +'<br />Point: '+ e.point +'<br />Offset: '+ e.offset;

    menuLayer.show().css({
        left: e.offset.x,
        top: e.offset.y
    }).html(coordHtml);
});




//setOptions 메서드를 통해 옵션을 조정할 수도 있습니다.
map.setOptions("mapTypeControl", true); //지도 유형 컨트롤의 표시 여부


// 지도 인터랙션 옵션
$("#interaction").on("click", function(e) {
    e.preventDefault();

    if (map.getOptions("draggable")) {
        map.setOptions({ //지도 인터랙션 끄기
            draggable: false,
            pinchZoom: false,
            scrollWheel: false,
            keyboardShortcuts: false,
            disableDoubleTapZoom: true,
            disableDoubleClickZoom: true,
            disableTwoFingerTapZoom: true
        });

        $(this).removeClass("control-on");
    } else {
        map.setOptions({ //지도 인터랙션 켜기
            draggable: true,
            pinchZoom: true,
            scrollWheel: true,
            keyboardShortcuts: true,
            disableDoubleTapZoom: false,
            disableDoubleClickZoom: false,
            disableTwoFingerTapZoom: false
        });

        $(this).addClass("control-on");
    }
});

// 관성 드래깅 옵션
$("#kinetic").on("click", function(e) {
    e.preventDefault();

    if (map.getOptions("disableKineticPan")) {
        map.setOptions("disableKineticPan", false); //관성 드래깅 켜기
        $(this).addClass("control-on");
    } else {
        map.setOptions("disableKineticPan", true); //관성 드래깅 끄기
        $(this).removeClass("control-on");
    }
});

// 타일 fadeIn 효과
$("#tile-transition").on("click", function(e) {
    e.preventDefault();

    if (map.getOptions("tileTransition")) {
        map.setOptions("tileTransition", false); //타일 fadeIn 효과 끄기

        $(this).removeClass("control-on");
    } else {
        map.setOptions("tileTransition", true); //타일 fadeIn 효과 켜기
        $(this).addClass("control-on");
    }
});

// min/max 줌 레벨
$("#min-max-zoom").on("click", function(e) {
    e.preventDefault();

    if (map.getOptions("minZoom") === 10) {
        map.setOptions({
            minZoom: 1,
            maxZoom: 14
        });
        $(this).val(this.name + ': 1 ~ 14');
    } else {
        map.setOptions({
            minZoom: 10,
            maxZoom: 12
        });
        $(this).val(this.name + ': 10 ~ 12');
    }
});

//지도 컨트롤
$("#controls").on("click", function(e) {
    e.preventDefault();

    if (map.getOptions("scaleControl")) {
        map.setOptions({ //모든 지도 컨트롤 숨기기
            scaleControl: false,
            logoControl: false,
            mapDataControl: false,
            zoomControl: false,
            mapTypeControl: false
        });
        $(this).removeClass('control-on');
    } else {
        map.setOptions({ //모든 지도 컨트롤 보이기
            scaleControl: true,
            logoControl: true,
            mapDataControl: true,
            zoomControl: true,
            mapTypeControl: true
        });
        $(this).addClass('control-on');
    }
});

$("#interaction, #tile-transition, #controls").addClass("control-on");

//GPS 중심 map location

function onSuccessGeolocation(position) {
    var location = new naver.maps.LatLng(position.coords.latitude,
                                         position.coords.longitude);

    map.setCenter(location); // 얻은 좌표를 지도의 중심으로 설정합니다.
    map.setZoom(12); // 지도의 줌 레벨을 변경합니다.

}

function onErrorGeolocation() {
    var center = map.getCenter();

}

$(window).on("load", function() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(onSuccessGeolocation, onErrorGeolocation);
    } else {
        var center = map.getCenter();

    }
});




</script>

